<Plugins>
  <Plugin>
    <Name>Microsoft Net Http</Name>
    <NugetPackage>Microsoft.Net.Http</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
      <Platform>iOS</Platform>
      <Platform>Droid</Platform>
      <Platform>WindowsPhone</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Description><![CDATA[
        This package includes HttpClient for sending requests over HTTP, as well as HttpRequestMessage and HttpResponseMessage for processing HTTP messages.
    ]]></Description>
  </Plugin>

  <Plugin>
    <Name>SQLite Net PCL *</Name>
    <NugetPackage>SQLite.Net-PCL</NugetPackage>
    <Platforms>
        <Platform>Core</Platform>
        <Platform>iOS</Platform>
        <Platform>Droid</Platform>
        <Platform>WindowsPhone</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Category>LocalStorage</Category>
    <NinjaSamples>
          <NinjaSample>
              <Name>SQLite.Net-PCL Todo Sample</Name>
              <NugetPackage Platform="Core">Scorchio.NinjaCoder.SQLite.Todo.Core</NugetPackage>
              <NugetPackage Platform="Forms">Scorchio.NinjaCoder.SQLite.Todo</NugetPackage>
              <NugetPackage Platform="iOS">Scorchio.NinjaCoder.SQLite.Todo</NugetPackage>
              <NugetPackage Platform="Droid">Scorchio.NinjaCoder.SQLite.Todo</NugetPackage>
              <NugetPackage Platform="WindowsPhone">Scorchio.NinjaCoder.SQLite.Todo</NugetPackage>
              <Description>A Todo example of using SQLite.Net-PCL.</Description>
              <Platforms>
                  <Platform>Core</Platform>
                  <Platform>Forms</Platform>
                  <Platform>iOS</Platform>
                  <Platform>Droid</Platform>
                  <Platform>WindowsPhone</Platform>
              </Platforms>
              <Frameworks>
                  <Framework>No Framework</Framework>
                  <Framework>MvvmCross</Framework>
                  <Framework>Xamarin Forms</Framework>
                  <Framework>MvvmCross and Xamarin Forms</Framework>
              </Frameworks>
              <Commands>
                  <Command Platform="Core" Type="RemoveFolder" Name="Helpers"/>
              </Commands>
              <FileOperations>
                  <FileOperation Platform="Droid" Type="ReplaceText" Name="" File="SqliteConnectionServiceDroid.cs" Directory="DependencyServices" From="Droid.Core" To="Core" />
                  <FileOperation Platform="iOS" Type="ReplaceText" Name="" File="SqliteConnectionServiceiOS.cs" Directory="DependencyServices" From="iOS.Core" To="Core" />
                  <FileOperation Platform="WindowsPhone" Type="ReplaceText" Name="" File="SqliteConnectionServiceWindowsPhone.cs" Directory="DependencyServices" From="WindowsPhone.Core" To="Core" />
                  <FileOperation Platform="Forms" Type="Properties" Name="" File="TodoItemView.xaml" Directory="Views" From="BuildAction" To="3" />
                  <FileOperation Platform="Forms" Type="ReplaceText" Name="" File="TodoItemView.xaml" Directory="Views" From="Forms.Core" To="Core" />
                  <FileOperation Platform="Forms" Type="Properties" Name="" File="TodoListView.xaml" Directory="Views" From="BuildAction" To="3" />
                  <FileOperation Platform="Forms" Type="ReplaceText" Name="" File="TodoListView.xaml" Directory="Views" From="Forms.Core" To="Core" />
              </FileOperations>
          </NinjaSample>
      </NinjaSamples>
    <Description><![CDATA[
    SQLite.Net PCL is an open source, minimal library to allow .NET and Mono applications to store data in SQLite databases.

    This is a fork of the original sqlite-net project, which aims to cleanup and improve the code and deliver the package as PCL assemblies with some additional platform-specific implementations.

    ]]></Description>
  </Plugin>

  <Plugin>
    <Name>MvvmLightLibs</Name>
    <NugetPackage>MvvmLightLibs</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Description><![CDATA[
    The MVVM Light Toolkit is a set of components helping people to get started in the Model-View-ViewModel pattern.    
     ]]></Description>
  </Plugin>

  <Plugin>
    <Name>PCL Storage</Name>
    <NugetPackage>PCLStorage</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Category>LocalStorage</Category>
    <Description><![CDATA[
         PCL Storage provides a consistent, portable set of local file IO APIs for .NET, Windows Phone, Windows Store, Xamarin.iOS, Xamarin.Android, and Silverlight. 

         This makes it easier to create cross-platform .NET libraries and apps.    
    ]]></Description>
  </Plugin> 

  <Plugin>
    <Name>Async OAuth</Name>
    <NugetPackage>AsyncOAuth</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Category>Authentication</Category>
    <Description><![CDATA[
    Portable Client Library and HttpClient based OAuth library, including all platform(for PCL).    
    ]]></Description>
  </Plugin>

  <Plugin>
    <Name>PCL Crypto</Name>
    <NugetPackage>PCLCrypto</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Description><![CDATA[
    PCL Crypto provides a consistent, portable set of crypto APIs for .NET, Windows Phone 8.0 & 8.1, Windows Store, Xamarin.iOS, Xamarin.Android, and Silverlight. 

    This makes it easier to create cross-platform .NET libraries and apps. 

    Crypto functionality includes asymmetric and symmetric encryption and signatures, and key derivation. 

    PCLCrypto calls into each native platform's crypto API for maximum performance. 

    For RSA operations this produces a 2-100X improvement in performance on Android and iOS over using the standard RSACryptoServiceProvider API.
    
     ]]></Description>
  </Plugin>

  <Plugin>
    <Name>Portable Rest</Name>
    <NugetPackage>PortableRest</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Description><![CDATA[
    A library for consuming REST APIs from Portable Class Libraries (.NET 4.5, Silverlight 5, Windows Phone 8.x, and Windows 8.x). 

    Designed to be partially drop-in compatible with RestSharp.
    ]]></Description>
  </Plugin>

  <Plugin>
    <Name>Portable Ninject</Name>
    <NugetPackage>Portable.Ninject</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Description><![CDATA[
        Stop writing monolithic applications that make you feel like you have to move mountains to make the simplest of changes. 

    Ninject helps you use the technique of dependency injection to break your applications into loosely-coupled, highly-cohesive components, 
    and then glue them back together in a flexible manner.

    Portable version of Ninject for .NET4, SL4, WP8, Wpa 8.1, Win8, iOS (Classic and Unified) and Android

    ]]></Description>
  </Plugin>

  <Plugin>
    <Name>Newtonsoft Json</Name>
    <NugetPackage>Newtonsoft.Json</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Description><![CDATA[
        Json.NET is a popular high-performance JSON framework for .NET
    ]]></Description>
  </Plugin>


  <Plugin>
    <Name>StyleCop MSBuild</Name>
    <NugetPackage>StyleCop.MSBuild</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
      <Platform>iOS</Platform>
      <Platform>Droid</Platform>
      <Platform>WindowsPhone</Platform>
      <Platform>WindowsStore</Platform>
      <Platform>Wpf</Platform>
      <Platform>Forms</Platform>
      <Platform>Core.Tests</Platform>
      <Platform>Forms.Tests</Platform>
      <Platform>iOS.Tests</Platform>
      <Platform>Droid.Tests</Platform>
      <Platform>WindowsPhone.Tests</Platform>
      <Platform>WindowsStore.Tests</Platform>
      <Platform>Wpf.Tests</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Category>BuildOptions</Category>
    <Description><![CDATA[
        Adds official StyleCop MSBuild targets to your project for running StyleCop analysis with every build. 

    Includes official StyleCop binaries. Works both on a developer workstation (with or without Visual Studio) and on a build server. 

    Does not require installation of StyleCop on any machine. Compatible with NuGet package restore. 
    ]]></Description>
  </Plugin>

  <Plugin>
    <Name>Amazon S3 Web Services</Name>
    <NugetPackage>AWSSDK.S3</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
      <Platform>iOS</Platform>
      <Platform>Droid</Platform>
      <Platform>WindowsPhone</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Description><![CDATA[Amazon webservices.]]></Description>
    <Category>CloudServices</Category>
  </Plugin>

    <Plugin>
    <Name>Amazon S3 Web Services</Name>
    <NugetPackage>AWSSDK.S3</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
      <Platform>iOS</Platform>
      <Platform>Droid</Platform>
      <Platform>WindowsPhone</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Description><![CDATA[Amazon webservices.]]></Description>
    <Category>CloudServices</Category>
  </Plugin>
        
  <Plugin>
    <Name>Amazon SQS Web Services</Name>
    <NugetPackage>AWSSDK.SQS</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
      <Platform>iOS</Platform>
      <Platform>Droid</Platform>
      <Platform>WindowsPhone</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Description><![CDATA[Amazon webservices.]]></Description>
    <Category>CloudServices</Category>
  </Plugin>
  
  <Plugin>
    <Name>Azure Mobile Services *</Name>
    <NugetPackage>WindowsAzure.MobileServices</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Category>CloudServices</Category>
    <NinjaSamples>
          <NinjaSample>
              <Name>Azure Tasks Sample</Name>
              <NugetPackage Platform="Core">Scorchio.NinjaCoder.Azure.Tasks.Core</NugetPackage>
              <Description>A Tasks example of using Azure Mobile Services</Description>
              <Platforms>
                  <Platform>Core</Platform>
              </Platforms>
              <Frameworks>
                  <Framework>No Framework</Framework>
                  <Framework>MvvmCross</Framework>
                  <Framework>Xamarin Forms</Framework>
                  <Framework>MvvmCross and Xamarin Forms</Framework>
              </Frameworks>
          </NinjaSample>
      </NinjaSamples>
    <Description><![CDATA[
    This client library enables client applications to connect to Windows Azure Mobile Services. 

    Mobile Services allows you to develop an app with a scalable and secure backend hosted in Windows Azure. 

    You can incorporate structured storage, user authentication and push notifications in minutes. 
    ]]></Description>
  </Plugin>

  <Plugin>
    <Name>Akavache Mobile</Name>
    <NugetPackage>Akavache.Mobile</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
      <Platform>iOS</Platform>
      <Platform>Droid</Platform>
      <Platform>WindowsPhone</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Description><![CDATA[
    An implementation of ISuspensionDriver that uses Akavache to save app state on tombstoning.
    ]]></Description>
  </Plugin>

  <Plugin>
    <Name>Fusillade</Name>
    <NugetPackage>fusillade</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Description><![CDATA[
    An HttpClient implementation for mobile apps that efficiently schedules and prioritizes requests.    
    ]]></Description>
  </Plugin>

  <Plugin>
    <Name>Xamarin Insights</Name>
    <NugetPackage>Xamarin.Insights</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
      <Platform>iOS</Platform>
      <Platform>Droid</Platform>
      <Platform>WindowsPhone</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Category>BuildOptions</Category>
    <Description><![CDATA[
        Insights for your Apps.
     ]]></Description>
  </Plugin>

  <Plugin>
    <Name>AutoFixture</Name>
    <NugetPackage>AutoFixture</NugetPackage>
    <Platforms>
      <Platform>Core.Tests</Platform>
      <Platform>Forms.Tests</Platform>
      <Platform>iOS.Tests</Platform>
      <Platform>Droid.Tests</Platform>
      <Platform>WindowsPhone.Tests</Platform>
      <Platform>WindowsStore.Tests</Platform>
      <Platform>Wpf.Tests</Platform>      
      
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Description><![CDATA[
        AutoFixture makes it easier for developers to do Test-Driven Development by automating non-relevant Test Fixture Setup, 
        allowing the Test Developer to focus on the essentials of each test case.
    ]]></Description>
  </Plugin>

  <Plugin>
    <Name>Velox.DB</Name>
    <NugetPackage>Velox.DB</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
      <Platform>iOS</Platform>
      <Platform>Droid</Platform>
      <Platform>WindowsPhone</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Category>LocalStorage</Category>
    <Description><![CDATA[
    Lightweight multi-platform ORM for mobile, desktop and servers. 
    A data provider is required to use this library. Providers for Sqlite, SQL Server and MySql are available on Nuget.
    ]]></Description>
  </Plugin>

  <Plugin>
    <Name>Clancey.SimpleAuth</Name>
    <NugetPackage>Clancey.SimpleAuth</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
      <Platform>iOS</Platform>
      <Platform>Droid</Platform>
      <Platform>WindowsPhone</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Category>Authentication</Category>
    <Description><![CDATA[
        The Simplest OAuth client for Xamarin.
    ]]></Description>
  </Plugin>
  
   <Plugin>
    <Name>Xam.Plugins.Messaging</Name>
    <NugetPackage>Xam.Plugins.Messaging</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
      <Platform>iOS</Platform>
      <Platform>Droid</Platform>
      <Platform>WindowsPhone</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Description><![CDATA[
        Xamarin and Windows plugin to make a phone call, send a sms or send an e-mail using the default messaging applications on the different Xamarin and Windows mobile platforms.
    ]]></Description>
  </Plugin>

  <Plugin>
    <Name>Dropbox</Name>
    <NugetPackage>Dropbox.Api</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Category>CloudServices</Category>
    <Description><![CDATA[
    Portable class library for accessing the Dropbox v2 API.
    ]]></Description>
  </Plugin>

  <Plugin>
    <Name>Settings *</Name>
    <NugetPackage>Xam.Plugins.Settings</NugetPackage>
    <Platforms>
      <Platform>Core</Platform>
      <Platform>iOS</Platform>
      <Platform>Droid</Platform>
      <Platform>WindowsPhone</Platform>
    </Platforms>
    <Frameworks>
      <Framework>No Framework</Framework>
      <Framework>MvvmCross</Framework>
      <Framework>Xamarin Forms</Framework>
      <Framework>MvvmCross and Xamarin Forms</Framework>
    </Frameworks>
    <Category>LocalStorage</Category>
    <NinjaSamples>
      <NinjaSample>
          <Name>Settings Simple Sample</Name>
          <NugetPackage Platform="Core">Scorchio.NinjaCoder.Settings.Simple.Core</NugetPackage>
          <NugetPackage Platform="Forms">Scorchio.NinjaCoder.Settings.Simple</NugetPackage>
          <Description>Simple Example of using Settings.</Description>
          <Platforms>
            <Platform>Core</Platform>
            <Platform>Forms</Platform>
          </Platforms>
          <Frameworks>
              <Framework>No Framework</Framework>
              <Framework>MvvmCross</Framework>
              <Framework>Xamarin Forms</Framework>
              <Framework>MvvmCross and Xamarin Forms</Framework>
          </Frameworks>
          <Commands>
              <Command Platform="Core" Type="RemoveFolder" Name="Helpers"/>
              <Command Platform="Droid" Type="RemoveFolder" Name="PluginsHelp"/>
              <Command Platform="iOS" Type="RemoveFolder" Name="PluginsHelp"/>
              <Command Platform="WindowsPhone" Type="RemoveFolder" Name="PluginsHelp"/>
          </Commands>
          <FileOperations>
              <FileOperation Platform="Forms" Type="ReplaceText" Name="" File="SettingsView.xaml" Directory="Views" From="Forms.Core" To="Core" />
              <FileOperation Platform="Forms" Type="Properties" Name="" File="SettingsView.xaml" Directory="Views" From="BuildAction" To="3" />
          </FileOperations>
      </NinjaSample>
    </NinjaSamples>
    <Description>
      <![CDATA[
        Xam.PCL Settings provides a consistent, cross platform settings plugin for Windows Phone Silverlight 8/8.1, Windows Phone 8.1, 
        Windows Store, Xamarin.iOS, and Xamarin.Android when using a PCL or any project and is Xamarin.Forms and MvvmCross compatible. 
        This makes it easier to create cross-platform .NET apps and have cross platform settings. 
        Manage and use all settings from one PCL and save natively on each platform. 
        
        *This plugin stores settings natively on each platform and does NOT save them to Json. 
        This allows you to use native functionality such as PreferenceActivity on Android.
    ]]>
    </Description>
  </Plugin>
</Plugins>